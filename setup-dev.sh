#!/bin/bash

# Client Feedback Hub - –°–∫—Ä–∏–ø—Ç —à–≤–∏–¥–∫–æ–≥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –Ω–∞–ª–∞—à—Ç–æ–≤—É—î –ø—Ä–æ—î–∫—Ç –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ—ó —Ä–æ–∑—Ä–æ–±–∫–∏

set -e  # –ó—É–ø–∏–Ω–∏—Ç–∏ –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ

echo "üöÄ Client Feedback Hub - –®–≤–∏–¥–∫–µ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è"
echo "=============================================="

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

print_status() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

print_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

print_warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

print_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–µ—Ä–µ–¥—É–º–æ–≤
check_requirements() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö –≤–∏–º–æ–≥..."
    
    # Node.js
    if ! command -v node &> /dev/null; then
        print_error "Node.js –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å Node.js 18+ –∑ https://nodejs.org/"
        exit 1
    fi
    
    node_version=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$node_version" -lt 18 ]; then
        print_error "–ü–æ—Ç—Ä—ñ–±–µ–Ω Node.js 18+. –ü–æ—Ç–æ—á–Ω–∞ –≤–µ—Ä—Å—ñ—è: $(node -v)"
        exit 1
    fi
    
    # npm
    if ! command -v npm &> /dev/null; then
        print_error "npm –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å npm —Ä–∞–∑–æ–º –∑ Node.js"
        exit 1
    fi
    
    # PostgreSQL
    if ! command -v psql &> /dev/null; then
        print_warning "PostgreSQL –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å PostgreSQL 14+ –∞–±–æ –∑–∞–ø—É—Å—Ç—ñ—Ç—å —á–µ—Ä–µ–∑ Docker"
        print_status "–î–ª—è macOS: brew install postgresql"
        print_status "–î–ª—è Ubuntu: sudo apt install postgresql postgresql-contrib"
        echo -n "–ü—Ä–æ–¥–æ–≤–∂–∏—Ç–∏ –±–µ–∑ PostgreSQL? (y/N): "
        read -r continue_without_pg
        if [[ ! $continue_without_pg =~ ^[Yy]$ ]]; then
            exit 1
        fi
    fi
    
    print_success "–°–∏—Å—Ç–µ–º–Ω—ñ –≤–∏–º–æ–≥–∏ –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ"
}

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π
install_dependencies() {
    print_status "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    
    # Root
    print_status "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è root –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    npm install
    
    # Backend
    print_status "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è backend –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    cd backend
    npm install
    cd ..
    
    # Frontend
    print_status "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è frontend –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    cd frontend
    npm install
    cd ..
    
    print_success "–ó–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
}

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞
setup_environment() {
    print_status "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞..."
    
    # Backend .env
    if [ ! -f "backend/.env" ]; then
        cp backend/.env.example backend/.env
        print_success "–°—Ç–≤–æ—Ä–µ–Ω–æ backend/.env"
    else
        print_warning "backend/.env –≤–∂–µ —ñ—Å–Ω—É—î"
    fi
    
    # Frontend .env
    if [ ! -f "frontend/.env" ]; then
        cp frontend/.env.example frontend/.env
        print_success "–°—Ç–≤–æ—Ä–µ–Ω–æ frontend/.env"
    else
        print_warning "frontend/.env –≤–∂–µ —ñ—Å–Ω—É—î"
    fi
    
    print_warning "–ù–µ –∑–∞–±—É–¥—å—Ç–µ –≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ .env —Ñ–∞–π–ª–∏ –∑ –≤–∞—à–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏!"
}

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
setup_database() {
    print_status "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ PostgreSQL
    if command -v psql &> /dev/null; then
        # –°–ø—Ä–æ–±–∞ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –±–∞–∑—É –¥–∞–Ω–∏—Ö
        if psql -lqt | cut -d \| -f 1 | grep -qw client_feedback_hub; then
            print_warning "–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö client_feedback_hub –≤–∂–µ —ñ—Å–Ω—É—î"
        else
            print_status "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö client_feedback_hub..."
            createdb client_feedback_hub 2>/dev/null || {
                print_warning "–ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ –ë–î –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ. –°—Ç–≤–æ—Ä—ñ—Ç—å –≤—Ä—É—á–Ω—É:"
                print_status "psql -c \"CREATE DATABASE client_feedback_hub;\""
            }
        fi
        
        # –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Prisma –∫–ª—ñ—î–Ω—Ç–∞ —Ç–∞ –º—ñ–≥—Ä–∞—Ü—ñ—ó
        cd backend
        print_status "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è Prisma –∫–ª—ñ—î–Ω—Ç–∞..."
        npm run db:generate
        
        print_status "–ó–∞–ø—É—Å–∫ –º—ñ–≥—Ä–∞—Ü—ñ–π..."
        npm run db:migrate
        
        print_status "–ó–∞–ø–æ–≤–Ω–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏–º–∏ –¥–∞–Ω–∏–º–∏..."
        npm run db:seed
        cd ..
        
        print_success "–ë–∞–∑–∞ –¥–∞–Ω–∏—Ö –Ω–∞–ª–∞—à—Ç–æ–≤–∞–Ω–æ"
    else
        print_warning "PostgreSQL –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ. –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ë–î"
        print_status "–í–∏ –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ PostgreSQL —á–µ—Ä–µ–∑ Docker:"
        print_status "docker run -d --name cfh-postgres -e POSTGRES_PASSWORD=password -p 5432:5432 postgres:15"
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
verify_setup() {
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è..."
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª—ñ–Ω—Ç–∏–Ω–≥—É
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª—ñ–Ω—Ç–∏–Ω–≥—É backend..."
    cd backend
    npm run lint 2>/dev/null || print_warning "–ü–æ–º–∏–ª–∫–∏ –ª—ñ–Ω—Ç–∏–Ω–≥—É –≤ backend"
    cd ..
    
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª—ñ–Ω—Ç–∏–Ω–≥—É frontend..."
    cd frontend
    npm run lint 2>/dev/null || print_warning "–ü–æ–º–∏–ª–∫–∏ –ª—ñ–Ω—Ç–∏–Ω–≥—É –≤ frontend"
    cd ..
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–±—ñ—Ä–∫–∏
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–±—ñ—Ä–∫–∏ backend..."
    cd backend
    npm run build || print_warning "–ü–æ–º–∏–ª–∫–∏ –∑–±—ñ—Ä–∫–∏ backend"
    cd ..
    
    print_status "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–±—ñ—Ä–∫–∏ frontend..."
    cd frontend
    npm run build || print_warning "–ü–æ–º–∏–ª–∫–∏ –∑–±—ñ—Ä–∫–∏ frontend"
    cd ..
    
    print_success "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ"
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    echo
    print_status "–ü–æ—á–∞—Ç–æ–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ–≥–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è..."
    echo
    
    check_requirements
    echo
    
    install_dependencies  
    echo
    
    setup_environment
    echo
    
    setup_database
    echo
    
    verify_setup
    echo
    
    print_success "üéâ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!"
    echo
    echo "–ù–∞—Å—Ç—É–ø–Ω—ñ –∫—Ä–æ–∫–∏:"
    echo "1. –í—ñ–¥—Ä–µ–¥–∞–≥—É–π—Ç–µ —Ñ–∞–π–ª–∏ .env –∑ –≤–∞—à–∏–º–∏ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è–º–∏"
    echo "2. –ó–∞–ø—É—Å—Ç—ñ—Ç—å –ø—Ä–æ—î–∫—Ç: npm run dev"
    echo "3. –í—ñ–¥–∫—Ä–∏–π—Ç–µ http://localhost:5173 —É –±—Ä–∞—É–∑–µ—Ä—ñ"
    echo
    echo "–¢–µ—Å—Ç–æ–≤—ñ –∞–∫–∞—É–Ω—Ç–∏:"
    echo "- –ê–¥–º—ñ–Ω: admin@cfh.local / admin123"
    echo "- –ú–µ–Ω–µ–¥–∂–µ—Ä: manager@cfh.local / manager123"
    echo "- –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á: user@cfh.local / user123"
    echo
    echo "–î–æ–≤—ñ–¥–∫–∞: cat QUICKSTART.md"
    echo
    
    # –ó–∞–ø–∏—Ç–∞—Ç–∏ —á–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ—î–∫—Ç
    echo -n "–ó–∞–ø—É—Å—Ç–∏—Ç–∏ –ø—Ä–æ—î–∫—Ç –∑–∞—Ä–∞–∑? (y/N): "
    read -r start_now
    if [[ $start_now =~ ^[Yy]$ ]]; then
        print_status "–ó–∞–ø—É—Å–∫ –ø—Ä–æ—î–∫—Ç—É..."
        npm run dev
    fi
}

# –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
trap 'print_error "–°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ –≤–∏–≤—ñ–¥ –≤–∏—â–µ."' ERR

# –ó–∞–ø—É—Å–∫
main "$@"